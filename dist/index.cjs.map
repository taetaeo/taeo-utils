{
  "version": 3,
  "sources": ["../src/index.ts", "../src/helpers/checker/is-alpahbet-checker.helper.ts", "../src/helpers/checker/equal-value-checker.helper.ts", "../src/helpers/date/date-plus-year.helper.ts"],
  "sourcesContent": ["export { isAlpahbetCheckerHelper } from \"./helpers/checker/is-alpahbet-checker.helper\";\r\nexport { equalValueCheckerHelper } from \"./helpers/checker/equal-value-checker.helper\";\r\nexport { datePlusYearHelper } from \"./helpers/date/date-plus-year.helper\";\r\n", "/**\r\n * \uC54C\uD30C\uBCB3\uC77C \uACBD\uC6B0 \uC608\uC678 \uCC98\uB9AC\uD558\uB3C4\uB85D \uB3C4\uC640\uC8FC\uB294 \uD568\uC218\r\n * @param {*} alpahbet\r\n * @returns\r\n */\r\n\r\ntype AlpahbetType = string;\r\n\r\nexport function isAlpahbetCheckerHelper(alpahbet: AlpahbetType) {\r\n  const isValid = /^[a-zA-Z\\s]+$/.test(alpahbet);\r\n  console.assert(typeof isValid === \"boolean\", `\uACB0\uACFC : ${alpahbet} \uD655\uC778\uC774 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4.`);\r\n  return isValid;\r\n}\r\n", "/**\r\n * \uB450 \uAC1C\uC758 \uD30C\uB77C\uBBF8\uD130 \uAC12\uC774 \uAC19\uC740\uC9C0 \uC544\uB2CC\uC9C0 \uD655\uC778\uD558\uB294 \uD568\uC218\r\n * @param {*} value1\r\n * @param {*} value2\r\n * @returns\r\n */\r\n\r\ntype ValueType = string | string[] | number | number[] | boolean | undefined;\r\n\r\nexport function equalValueCheckerHelper(value1: ValueType, value2: ValueType) {\r\n  if (value1 !== value2) return false;\r\n  return true;\r\n}\r\n", "/**\r\n * \uD2B9\uC815\uC2DC\uC810 \uAE30\uC900 \uC774\uD6C4\uC758 \uC2DC\uAC04\uC744 \uC54C\uB824\uC8FC\uB294 \uD568\uC218\r\n *\r\n * \uCCAB \uBC88\uC9F8 \uD30C\uB77C\uBBF8\uD130 : \uACE0\uC815 \uC2DC\uC810 \uB0A0\uC9DC \uD615\uC2DD (2023-11-09 14:33:51)\r\n * \uB450 \uBC88\uC9F8 \uD30C\uB77C\uBBF8\uD130 : \uC6D0\uD558\uB294 \uC774\uD6C4\uC758 \uB144\uB3C4 \uC2DC\uC810 (\uC22B\uC790 \uD0C0\uC785)\r\n * @param {string} inputDate\r\n * @param {number} plusYear\r\n * @returns {string} yyyy-mm-dd hh:mm:ss\r\n */\r\nexport function datePlusYearHelper(inputDate: string, plusYear: number = 2) {\r\n  try {\r\n    console.assert(!inputDate, `\uACB0\uACFC : datePlusYearHelper\uC5D0\uC11C ${inputDate} \uD655\uC778\uC774 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4.`);\r\n\r\n    if (!inputDate) return;\r\n\r\n    let currentDate: Date = new Date(inputDate);\r\n\r\n    if (typeof currentDate === \"number\" && isNaN(currentDate)) throw new Error(\"\uC62C\uBC14\uB978 \uB0A0\uC9DC \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4.\");\r\n\r\n    currentDate.setFullYear(currentDate.getFullYear() + plusYear);\r\n\r\n    const needToKnowafterYears = currentDate.toLocaleString(\"ko-KR\");\r\n\r\n    return needToKnowafterYears;\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      console.error(\"\uB0A0\uC9DC\uB97C \uCC98\uB9AC\uD558\uB294 \uB3D9\uC548 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4:\", error.message);\r\n    } else {\r\n      console.error(\"\uB0A0\uC9DC\uB97C \uCC98\uB9AC\uD558\uB294 \uB3D9\uC548 \uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.\");\r\n    }\r\n    return \"0000-00-00\";\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACQO,SAAS,wBAAwB,UAAwB;AAC9D,QAAM,UAAU,gBAAgB,KAAK,QAAQ;AAC7C,UAAQ,OAAO,OAAO,YAAY,WAAW,kBAAQ,QAAQ,iEAAe;AAC5E,SAAO;AACT;;;ACHO,SAAS,wBAAwB,QAAmB,QAAmB;AAC5E,MAAI,WAAW;AAAQ,WAAO;AAC9B,SAAO;AACT;;;ACHO,SAAS,mBAAmB,WAAmB,WAAmB,GAAG;AAC1E,MAAI;AACF,YAAQ,OAAO,CAAC,WAAW,iDAA6B,SAAS,iEAAe;AAEhF,QAAI,CAAC;AAAW;AAEhB,QAAI,cAAoB,IAAI,KAAK,SAAS;AAE1C,QAAI,OAAO,gBAAgB,YAAY,MAAM,WAAW;AAAG,YAAM,IAAI,MAAM,8EAAkB;AAE7F,gBAAY,YAAY,YAAY,YAAY,IAAI,QAAQ;AAE5D,UAAM,uBAAuB,YAAY,eAAe,OAAO;AAE/D,WAAO;AAAA,EACT,SAAS,OAAO;AACd,QAAI,iBAAiB,OAAO;AAC1B,cAAQ,MAAM,qHAA2B,MAAM,OAAO;AAAA,IACxD,OAAO;AACL,cAAQ,MAAM,8IAAgC;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
